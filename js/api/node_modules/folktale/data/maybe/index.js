'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

//----------------------------------------------------------------------
//
// This source file is part of the Folktale project.
//
// Licensed under MIT. See LICENCE for full licence information.
// See CONTRIBUTORS for the list of contributors to the project.
//
//----------------------------------------------------------------------

/*~
 * stability: unstable
 * authors:
 *   - "@boris-marinov"
 *   - Quildreen Motta
 */
module.exports = _extends({}, require('./maybe'), {

  /*~
   * type: |
   *   forall a: (a or void) => Maybe a
   */
  fromNullable: function fromNullable(aNullable) {
    return require('../conversions/nullable-to-maybe')(aNullable);
  },


  /*~
   * type: |
   *   forall a, b: (Result a b) => Maybe b
   */
  fromResult: function fromResult(aResult) {
    return require('../conversions/result-to-maybe')(aResult);
  },


  /*~
   * type: |
   *   forall a, b: (Validation a b) => Maybe b
   */
  fromValidation: function fromValidation(aValidation) {
    return require('../conversions/validation-to-maybe')(aValidation);
  }
});